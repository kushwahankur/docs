Introduction to Formulas in Planisware:-

Formulas in Planisware can be used to return different types of values using object attributes, logical operators, functions, and constant values (such as strings or numbers).
They are used to:

? Filter objects displayed in list tables.
? Filter objects treated by macros, alerts, and so on.
? Create new values from a combination of other values, to be displayed like other attributes, or to modify existing values.
? Convert values of one data type into others for further calculations.
? Produce, sort, and find data in lists of data.

-------------------

In Administration Module
In the Configuration page, in the administration module, you can create various objects in which formulas will be used,
in any fields containing the icon that links to the formula help dialog. You can refer to the E-learning content for the administration module, 
for more information. The following list summarizes where formulas can be used, in this module:

? Alerts: enable you to specify the display of messages to users when certain conditions are triggered.
? Data management rules: or data consistency rules enable the administrator to filter the values available in a list.
? Locks: enables you to block the modification of specified attributes on an object class or block the deletion of specific objects.
? User attributes: enables the administrator to add attributes to a specific object class. If a computation formula is entered,
 the user attribute will be equivalent to a named formula created in Planisware.

-----------------------------

In Planisware Explorer Module
Planisware Explorer is a powerful module that allows users to visualize data in different views and charts, such as table views, 
bar charts, graphs, bubble charts, and so on, by building queries. You can refer to the E-learning content for this module for more information.
Formulas can be used in the following situations inside of Planisware Explorer to build queries and dashboards.
In the query builder:
? Measures: if you create a measure based on a field, you can filter this field based on a formula.
? Filters: the data displayed in the query can be filtered by a formula applied to a dimension.
In the dashboard builder:
? Widgets: you can insert a formula widget that will directly print the formula’s returned value in the dashboard.
? Filters: in addition to the filters created inside of the query, filters can be added in the dashboard to reduce data to be displayed.

---------------------------

Creating Named Formulas:-
To create a new named formula or to view existing ones, you can go to Data > Data model configuration > Named Formulae (in Pro Web).

Creating Iterative Named Formulas:-
Iterative formulas enable you to return values according to relation attributes between the origin object class and the related object class, 
in a 1-N relation. Their use implies the knowledge of Planisware data model. To explain this concept, an example will be used.
Suppose that the business needs to be able to assign a resource to any activity and call it Principal resource. As the data model diagram below shows, 
a 1 – N relation attribute is created to link the class ACTIVITY to the class RESOURCE. An activity can have only one principal resource while a 
resource can manage multiple activities.
The following image shows the attribute sheet for the definition of the relation attribute. It defines a directional relation from activities (Primary object)
to resources (secondary object). The Inverse relation description is the name that will be used to navigate the relation in the opposite direction.

The fields are filled in as such:
? Object class: the object on which the formula works. In this example, resource.
? Label: text that will be displayed if the formula is added as a column in a table.
? Name: used internally to call the formula.
? Type: data type returned by the formula.
? Iterative formula: means that the formula will be scanning all objects linked to the object class. In the example, it will scan all activities linked to the resource.
? The maximum of: this is a drop-down menu that displays options depending on the type of formula. The example formula is designed to return the maximum of durations of linked activities. Other possible values for this drop-down menu are listed in a table below.
? Verifying: filter condition applied to each scanned object. The example formula is designed to only include activities that are not finished yet (AF or Actual finish not filled).
? Of the value: formula defining the value that will be returned by the iterative formula.
In summary, this iterative formula will operate on resources, and display for each of them, the duration of the longest ongoing activity (no actual finish entered) linked to it by the inverse relation to Principal resource.

------------------------------------------------

Formula:-

Date and Duration Functions-->
ADD_DURATION: 
Description -> Allows to add a duration to a date taking into account a calendar.
Type -> Date

Example:- 
Description -> We want to know the date of a task whose planned start might slip of 10days, based on a 5 days per week calendar.
class: Activity
Formula: ADD_DURATION(PS,'10d',"CAL5D")
Result: 18/07/15
Note: PS is the technical name of the Planned Start field   
